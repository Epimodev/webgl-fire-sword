precision highp float;

attribute vec2 uv;

uniform float u_time;
uniform vec3 u_color1;
uniform vec3 u_color2;

varying vec2 v_uv;

#include "../shaders/interpolation.glslx"

const float speed = 0.5;

export void backgroundVertex() {
  float x = lerp(-1.0, 1.0, uv.x);
  float y = lerp(-1.0, 1.0, uv.y);

  gl_Position = vec4(x, y, 1.0, 1.0);

  v_uv = uv;
}

export void backgroundFragment() {
  // create a point moving on an ellipse path
  float x = cos(u_time * speed);
  x = remap(-1.0, 1.0, 0.3, 0.8, x);
  float y = sin(-0.8 + u_time * speed);
  y = remap(-1.0, 1.0, 0.3, 0.9, y);
  vec2 center = vec2(x, y);

  float circle = distance(v_uv, center);
  circle = invLerp(0.0, 0.4, circle);
  vec3 color = mix(u_color1, u_color2, circle);

  gl_FragColor = vec4(color, 1.0);
}
